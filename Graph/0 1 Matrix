/*
Given an m x n binary matrix mat, return the distance of the nearest 0 for each cell.

The distance between two adjacent cells is 1.
*/

class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n=mat.size();
        int m=mat[0].size();

        vector<vector<int>> vis(n,vector<int>(m,0));
        vector<vector<int>> dis(n,vector<int>(m,0));
        queue<pair<pair<int,int>,int>> q;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(mat[i][j]==0)
                {
                    vis[i][j]=1;
                    q.push({{i,j},0});
                }
            }
        }
        int delrow[]={-1,0,0,1};
        int delcol[]={0,-1,1,0};
        while(!q.empty())
        {
            int r=q.front().first.first;
            int c=q.front().first.second;
            int d=q.front().second;
            q.pop();
            dis[r][c]=d;
            for(int i=0;i<4;i++)
            {
                int row=r+delrow[i];
                int col=c+delcol[i];
                if(row>=0&&row<n&&col>=0&&col<m&&vis[row][col]==0)
                {
                    vis[row][col]=1;
                    q.push({{row,col},d+1});
                }
            }
        }
        return dis;
    }
};
